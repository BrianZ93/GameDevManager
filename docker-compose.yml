services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: go-backend
    working_dir: /app
    # volumes:
      # - ./backend:/app
    ports:
      - "8000:8000"
    command: >
      bash -c "
        apt-get update &&
        apt-get install -y gcc libc6-dev &&
        go install github.com/air-verse/air@latest &&
        [ -f .air.toml ] || air init &&
        $(go env GOPATH)/bin/air -c .air.toml
      "
    environment:
      - GO111MODULE=on
      - CGO_ENABLED=1
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app
          ignore:
            - tmp/
            - vendor/
            - .git/
        - action: rebuild
          path: ./backend/go.mod
        - action: rebuild
          path: ./backend/go.sum
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: quasar-frontend
    working_dir: /app
    volumes:
      # - ./frontend:/app
      - /app/node_modules
    ports:
      - "9000:9000"
    environment:
      - NODE_ENV=development
    command: >
      bash -c "
        npm install -g @quasar/cli &&
        npm install &&
        npm run dev
      "
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
          ignore:
            - node_modules/
            - dist/
            - .git/
        - action: rebuild
          path: ./frontend/package.json
        - action: rebuild
          path: ./frontend/package-lock.json
    networks:
      - app-network

networks:
  app-network:
    driver: bridge